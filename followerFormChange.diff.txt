diff --git a/src/pokemon_storage_system.c b/src/pokemon_storage_system.c
index ff71790cee..9bf6beadbb 100644
--- a/src/pokemon_storage_system.c
+++ b/src/pokemon_storage_system.c
@@ -589,7 +589,6 @@ EWRAM_DATA static u8 sMovingMonOrigBoxId = 0;
 EWRAM_DATA static u8 sMovingMonOrigBoxPos = 0;
 EWRAM_DATA static bool8 sAutoActionOn = 0;
 EWRAM_DATA static bool8 sJustOpenedBag = 0;
-EWRAM_DATA static bool8 sRefreshDisplayMonGfx = FALSE;
 
 // Main tasks
 static void Task_InitPokeStorage(u8);
@@ -890,8 +889,8 @@ static void UnkUtil_CpuRun(struct UnkUtilData *);
 static void UnkUtil_DmaRun(struct UnkUtilData *);
 
 // Form changing
-void SetMonFormPSS(struct BoxPokemon *boxMon, u32 method);
-void UpdateSpeciesSpritePSS(struct BoxPokemon *boxmon);
+void SetMonFormPSS(struct BoxPokemon *boxMon, u32 method, bool32 *refreshDisplayMonGfx);
+void UpdateSpeciesSpritePSS(struct BoxPokemon *boxmon, bool32 *refreshDisplayMonGfx);
 
 static const u8 gText_JustOnePkmn[] = _("There is just one POKÃ©MON with you.");
 static const u8 gText_PartyFull[] = _("Your party is full!");
@@ -3817,18 +3816,19 @@ static void GiveChosenBagItem(void)
     if (itemId != ITEM_NONE)
     {
         u8 pos = GetCursorPosition();
+        u32 refreshDisplayMonGfx = FALSE;
         if (sInPartyMenu)
         {
             struct Pokemon *mon = &gPlayerParty[pos];
             SetMonData(&gPlayerParty[pos], MON_DATA_HELD_ITEM, &itemId);
-            SetMonFormPSS(&mon->box, FORM_CHANGE_ITEM_HOLD);
-            UpdateSpeciesSpritePSS(&mon->box);
+            SetMonFormPSS(&mon->box, FORM_CHANGE_ITEM_HOLD, &refreshDisplayMonGfx);
+            UpdateSpeciesSpritePSS(&mon->box, &refreshDisplayMonGfx);
         }
         else
         {
             SetCurrentBoxMonData(pos, MON_DATA_HELD_ITEM, &itemId);
-            SetMonFormPSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][pos], FORM_CHANGE_ITEM_HOLD);
-            UpdateSpeciesSpritePSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][pos]);
+            SetMonFormPSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][pos], FORM_CHANGE_ITEM_HOLD, &refreshDisplayMonGfx);
+            UpdateSpeciesSpritePSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][pos], &refreshDisplayMonGfx);
         }
 
         RemoveBagItem(itemId, 1);
@@ -6405,6 +6405,7 @@ static void MoveMon(void)
 static void PlaceMon(void)
 {
     u8 boxId;
+    u32 refreshDisplayMonGfx = FALSE;
 
     switch (sCursorArea)
     {
@@ -6412,13 +6413,13 @@ static void PlaceMon(void)
         SetPlacedMonData(TOTAL_BOXES_COUNT, sCursorPosition);
         SetPlacedMonSprite(TOTAL_BOXES_COUNT, sCursorPosition);
         struct Pokemon *mon = &gPlayerParty[sCursorPosition];
-        UpdateSpeciesSpritePSS(&mon->box);
+        UpdateSpeciesSpritePSS(&mon->box, &refreshDisplayMonGfx);
         break;
     case CURSOR_AREA_IN_BOX:
         boxId = StorageGetCurrentBox();
         SetPlacedMonData(boxId, sCursorPosition);
         SetPlacedMonSprite(boxId, sCursorPosition);
-        UpdateSpeciesSpritePSS(&gPokemonStoragePtr->boxes[boxId][sCursorPosition]);
+        UpdateSpeciesSpritePSS(&gPokemonStoragePtr->boxes[boxId][sCursorPosition], &refreshDisplayMonGfx);
         break;
     default:
         return;
@@ -6455,18 +6456,20 @@ static void SetPlacedMonData(u8 boxId, u8 position)
     if (OW_PC_HEAL <= GEN_7)
         HealPokemon(&sStorage->movingMon);
 
+    u32 refreshDisplayMonGfx = FALSE;
+
     if (boxId == TOTAL_BOXES_COUNT)
     {
         gPlayerParty[position] = sStorage->movingMon;
         struct Pokemon *mon = &gPlayerParty[position];
         if (mon == GetFirstLiveMon())
             gFollowerSteps = 0;
-        SetMonFormPSS(&mon->box, FORM_CHANGE_WITHDRAW);
+        SetMonFormPSS(&mon->box, FORM_CHANGE_WITHDRAW, &refreshDisplayMonGfx);
     }
     else
     {
         SetBoxMonAt(boxId, position, &sStorage->movingMon.box);
-        SetMonFormPSS(&gPokemonStoragePtr->boxes[boxId][position], FORM_CHANGE_DEPOSIT);
+        SetMonFormPSS(&gPokemonStoragePtr->boxes[boxId][position], FORM_CHANGE_DEPOSIT, &refreshDisplayMonGfx);
     }
 }
 
@@ -6971,13 +6974,13 @@ static void ReshowDisplayMon(void)
         TryRefreshDisplayMon();
 }
 
-void SetMonFormPSS(struct BoxPokemon *boxMon, u32 method)
+void SetMonFormPSS(struct BoxPokemon *boxMon, u32 method, bool32 *refreshDisplayMonGfx)
 {
     u16 targetSpecies = GetFormChangeTargetSpeciesBoxMon(boxMon, method, 0);
     if (targetSpecies != GetBoxMonData(boxMon, MON_DATA_SPECIES, NULL))
     {
         SetBoxMonData(boxMon, MON_DATA_SPECIES, &targetSpecies);
-        sRefreshDisplayMonGfx = TRUE;
+        *refreshDisplayMonGfx = TRUE;
     }
 }
 
@@ -8944,6 +8947,7 @@ static void TakeItemFromMon(u8 cursorArea, u8 cursorPos)
 {
     u8 id;
     u16 itemId;
+    u32 refreshDisplayMonGfx = FALSE;
 
     if (sStorage->boxOption != OPTION_MOVE_ITEMS)
         return;
@@ -8957,16 +8961,16 @@ static void TakeItemFromMon(u8 cursorArea, u8 cursorPos)
     {
         SetCurrentBoxMonData(cursorPos, MON_DATA_HELD_ITEM, &itemId);
         SetBoxMonIconObjMode(cursorPos, ST_OAM_OBJ_BLEND);
-        SetMonFormPSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos], FORM_CHANGE_ITEM_HOLD);
-        UpdateSpeciesSpritePSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos]);
+        SetMonFormPSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos], FORM_CHANGE_ITEM_HOLD, &refreshDisplayMonGfx);
+        UpdateSpeciesSpritePSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos], &refreshDisplayMonGfx);
     }
     else
     {
         struct Pokemon *mon = &gPlayerParty[cursorPos];
         SetMonData(&gPlayerParty[cursorPos], MON_DATA_HELD_ITEM, &itemId);
         SetPartyMonIconObjMode(cursorPos, ST_OAM_OBJ_BLEND);
-        SetMonFormPSS(&mon->box, FORM_CHANGE_ITEM_HOLD);
-        UpdateSpeciesSpritePSS(&mon->box);
+        SetMonFormPSS(&mon->box, FORM_CHANGE_ITEM_HOLD, &refreshDisplayMonGfx);
+        UpdateSpeciesSpritePSS(&mon->box, &refreshDisplayMonGfx);
     }
 
     sStorage->movingItemId = sStorage->displayMonItemId;
@@ -8989,6 +8993,7 @@ static void SwapItemsWithMon(u8 cursorArea, u8 cursorPos)
 {
     u8 id;
     u16 itemId;
+    u32 refreshDisplayMonGfx = FALSE;
 
     if (sStorage->boxOption != OPTION_MOVE_ITEMS)
         return;
@@ -9001,8 +9006,8 @@ static void SwapItemsWithMon(u8 cursorArea, u8 cursorPos)
         itemId = GetCurrentBoxMonData(cursorPos, MON_DATA_HELD_ITEM);
         SetCurrentBoxMonData(cursorPos, MON_DATA_HELD_ITEM, &sStorage->movingItemId);
         sStorage->movingItemId = itemId;
-        SetMonFormPSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos], FORM_CHANGE_ITEM_HOLD);
-        UpdateSpeciesSpritePSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos]);
+        SetMonFormPSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos], FORM_CHANGE_ITEM_HOLD, &refreshDisplayMonGfx);
+        UpdateSpeciesSpritePSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos], &refreshDisplayMonGfx);
     }
     else
     {
@@ -9010,8 +9015,8 @@ static void SwapItemsWithMon(u8 cursorArea, u8 cursorPos)
         itemId = GetMonData(&gPlayerParty[cursorPos], MON_DATA_HELD_ITEM);
         SetMonData(&gPlayerParty[cursorPos], MON_DATA_HELD_ITEM, &sStorage->movingItemId);
         sStorage->movingItemId = itemId;
-        SetMonFormPSS(&mon->box, FORM_CHANGE_ITEM_HOLD);
-        UpdateSpeciesSpritePSS(&mon->box);
+        SetMonFormPSS(&mon->box, FORM_CHANGE_ITEM_HOLD, &refreshDisplayMonGfx);
+        UpdateSpeciesSpritePSS(&mon->box, &refreshDisplayMonGfx);
     }
 
     id = GetItemIconIdxByPosition(CURSOR_AREA_IN_HAND, 0);
@@ -9022,6 +9027,7 @@ static void SwapItemsWithMon(u8 cursorArea, u8 cursorPos)
 static void GiveItemToMon(u8 cursorArea, u8 cursorPos)
 {
     u8 id;
+    u32 refreshDisplayMonGfx = FALSE;
 
     if (sStorage->boxOption != OPTION_MOVE_ITEMS)
         return;
@@ -9033,16 +9039,16 @@ static void GiveItemToMon(u8 cursorArea, u8 cursorPos)
     {
         SetCurrentBoxMonData(cursorPos, MON_DATA_HELD_ITEM, &sStorage->movingItemId);
         SetBoxMonIconObjMode(cursorPos, ST_OAM_OBJ_NORMAL);
-        SetMonFormPSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos], FORM_CHANGE_ITEM_HOLD);
-        UpdateSpeciesSpritePSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos]);
+        SetMonFormPSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos], FORM_CHANGE_ITEM_HOLD, &refreshDisplayMonGfx);
+        UpdateSpeciesSpritePSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos], &refreshDisplayMonGfx);
     }
     else
     {
         struct Pokemon *mon = &gPlayerParty[cursorPos];
         SetMonData(&gPlayerParty[cursorPos], MON_DATA_HELD_ITEM, &sStorage->movingItemId);
         SetPartyMonIconObjMode(cursorPos, ST_OAM_OBJ_NORMAL);
-        SetMonFormPSS(&mon->box, FORM_CHANGE_ITEM_HOLD);
-        UpdateSpeciesSpritePSS(&mon->box);
+        SetMonFormPSS(&mon->box, FORM_CHANGE_ITEM_HOLD, &refreshDisplayMonGfx);
+        UpdateSpeciesSpritePSS(&mon->box, &refreshDisplayMonGfx);
     }
 }
 
@@ -9050,6 +9056,7 @@ static void MoveItemFromMonToBag(u8 cursorArea, u8 cursorPos)
 {
     u8 id;
     u16 itemId;
+    u32 refreshDisplayMonGfx = FALSE;
 
     if (sStorage->boxOption != OPTION_MOVE_ITEMS)
         return;
@@ -9062,16 +9069,16 @@ static void MoveItemFromMonToBag(u8 cursorArea, u8 cursorPos)
     {
         SetCurrentBoxMonData(cursorPos, MON_DATA_HELD_ITEM, &itemId);
         SetBoxMonIconObjMode(cursorPos, ST_OAM_OBJ_BLEND);
-        SetMonFormPSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos], FORM_CHANGE_ITEM_HOLD);
-        UpdateSpeciesSpritePSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos]);
+        SetMonFormPSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos], FORM_CHANGE_ITEM_HOLD, &refreshDisplayMonGfx);
+        UpdateSpeciesSpritePSS(&gPokemonStoragePtr->boxes[StorageGetCurrentBox()][cursorPos], &refreshDisplayMonGfx);
     }
     else
     {
         struct Pokemon *mon = &gPlayerParty[cursorPos];
         SetMonData(&gPlayerParty[cursorPos], MON_DATA_HELD_ITEM, &itemId);
         SetPartyMonIconObjMode(cursorPos, ST_OAM_OBJ_BLEND);
-        SetMonFormPSS(&mon->box, FORM_CHANGE_ITEM_HOLD);
-        UpdateSpeciesSpritePSS(&mon->box);
+        SetMonFormPSS(&mon->box, FORM_CHANGE_ITEM_HOLD, &refreshDisplayMonGfx);
+        UpdateSpeciesSpritePSS(&mon->box, &refreshDisplayMonGfx);
     }
 }
 
@@ -10202,7 +10209,7 @@ static void UnkUtil_DmaRun(struct UnkUtilData *data)
     }
 }
 
-void UpdateSpeciesSpritePSS(struct BoxPokemon *boxMon)
+void UpdateSpeciesSpritePSS(struct BoxPokemon *boxMon, bool32 *refreshDisplayMonGfx)
 {
     u16 species = GetBoxMonData(boxMon, MON_DATA_SPECIES);
     bool8 isShiny = GetBoxMonData(boxMon, MON_DATA_IS_SHINY);
@@ -10213,11 +10220,11 @@ void UpdateSpeciesSpritePSS(struct BoxPokemon *boxMon)
     sStorage->displayMonPalette = GetMonSpritePalFromSpeciesAndPersonality(species, isShiny, pid);
     if (!sJustOpenedBag)
     {
-        if (sRefreshDisplayMonGfx)
+        if (refreshDisplayMonGfx)
         {
             LoadDisplayMonGfx(species, pid);
             StartDisplayMonMosaicEffect();
-            sRefreshDisplayMonGfx = FALSE;
+            refreshDisplayMonGfx = FALSE;
         }
 
         // Recreate icon sprite
